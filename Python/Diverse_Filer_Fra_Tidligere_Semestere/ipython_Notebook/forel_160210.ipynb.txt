{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "%matplotlib inline\n",
    "\n",
    "import os\n",
    "from math import *\n",
    "import numpy as np\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "from mpl_toolkits.mplot3d import Axes3D\n",
    "from matplotlib import cm"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Eksempel 3.8.1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "x = np.arange(-5., 5., .5)\n",
    "y = np.arange(-3., 3., .5)\n",
    "xv, yv = np.meshgrid(x, y, indexing='ij', sparse=False)\n",
    "u = xv*yv\n",
    "v = xv*np.sin(xv*yv)\n",
    "fig = plt.figure(1)\n",
    "ax = fig.gca()\n",
    "ax.quiver(xv, yv, u, v)\n",
    "\n",
    "x = np.arange(-5., 5., .01)\n",
    "y = np.arange(-3., 3., .01)\n",
    "xv,yv = np.meshgrid(x, y)\n",
    "u = xv*yv\n",
    "v = xv*np.sin(xv*yv)\n",
    "plt.streamplot(xv, yv, u, v)\n",
    "plt.axis('equal')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Seksjon 3.9"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "fig = plt.figure(2)\n",
    "u = v = np.linspace(0, 2*pi, 50)\n",
    "uv, vv = np.meshgrid(u, v, indexing='ij', sparse=False)\n",
    "r = 2\n",
    "R = 5\n",
    "ax = fig.gca(projection='3d')\n",
    "ax.plot_surface((R + r*np.cos(uv))*np.cos(vv), (R + r*np.cos(uv))*np.sin(vv), r*np.sin(uv), cmap=cm.coolwarm, rstride=1, cstride=1)\n",
    "plt.axis('equal')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Eksempel 3.9.2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "fig = plt.figure(3)\n",
    "phi = np.linspace(0, pi, 100)\n",
    "theta = np.linspace(0, 2*np.pi, 200)\n",
    "phiv, thetav = np.meshgrid(phi, theta, indexing='ij', sparse=False)\n",
    "ax = fig.gca(projection='3d')\n",
    "ax.plot_surface(3*np.sin(phiv)*np.cos(thetav), 3*np.sin(phiv)*np.sin(thetav), 3*np.cos(phiv), cmap=cm.coolwarm, rstride=1, cstride=1)\n",
    "plt.axis('equal')"
   ]
  }
 ],
 "metadata": {},
 "nbformat": 4,
 "nbformat_minor": 0
}
